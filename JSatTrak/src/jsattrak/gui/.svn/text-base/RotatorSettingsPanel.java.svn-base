/*
 * GroundSystemsPanel.java
 *
 * Created on Apr 21, 2009, 5:09:23 PM
 */

package jsattrak.gui;

import edu.cusat.common.Failure;
import edu.cusat.gs.rotator.Rotator;
import edu.cusat.gs.rotator.RotatorController;
import edu.cusat.gs.rotator.RotatorFactory;
import edu.cusat.gs.rotator.MockRotator;
import gnu.io.CommPortIdentifier;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author David Bjanes
 */
public class RotatorSettingsPanel extends javax.swing.JPanel {

    private Rotator rotator = null;
    private CommPortIdentifier port = null;
    private JTrackingPanel parent;

    private boolean showConnect;

    /** Creates new form GroundSystemsPanel */
    public RotatorSettingsPanel(JTrackingPanel parent) {
        this.parent = parent;
        this.showConnect = false;

        initComponents();

        setConnection(showConnect);
        
        for (RotatorFactory rf : RotatorFactory.values()) {
            rotatorSelect.addItem(rf);
        }
        //rotatorSelect.setSelectedIndex(2); // TODO REMOVE HACK
    }

    /** @return an instance of the selected rotator, or <code>null</code> **/
    public Rotator getSelectedRotator() {
        if(rotatorSelect.getSelectedItem() instanceof RotatorFactory){     
            rotator = ((RotatorFactory) rotatorSelect
                .getSelectedItem()).createRotator();
            return rotator;
        } 
        return null;
    }

    private void portSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portSelectActionPerformed
    	// TODO Remove
    }//GEN-LAST:event_portSelectActionPerformed

    private void connectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBtnActionPerformed
        if (showConnect) {
            port = ((CommPortComboBox)portSelect).getSelectedPort();
            getSelectedRotator();
            if (rotator == null) {
                JOptionPane.showMessageDialog(this, "Error: Please Select Rotator");
                rotatorSelect.setSelectedIndex(0);
                return;
            }
            if (port == null && !(rotator instanceof MockRotator)) {
                JOptionPane.showMessageDialog(this, "Error: Please Select COM port");
                this.portSelect.setSelectedIndex(0);
                return;
            }
            try {
                rotator.setPort(port);
                rotator.connect(9600);
                parent.rController = new RotatorController(rotator);
                setConnection(true);
            } catch (Failure e) {
                e.printStackTrace();
                rotatorSelect.setSelectedIndex(0);
                setConnection(false);
                JOptionPane.showMessageDialog(this, "Error: Rotator Connection Failure.");
            }
            /*
            //Update GUI
            connectBtn.setText("Disconnect");
            connectBtn.setBackground(Color.green);
            showConnect = false;
            */
        }
        else {
            if(rotator != null) rotator.disconnect();
            rotatorSelect.setSelectedIndex(0);
            setConnection(false);
            /*
            //Update GUI 
            connectBtn.setText("Connect");
            connectBtn.setBackground(Color.red);
            showConnect = true;
             */
        }
    }//GEN-LAST:event_connectBtnActionPerformed
   
    /**
     * Update the panel to reflect the current connection status
     * @param connected <code>true</code> to connect, <code>false</code> to disconnect.
     */
    private void setConnection(boolean connected){
        showConnect = !connected;
        if (showConnect) {
            connectBtn.setText("Connect");
            connectBtn.setBackground(Color.red);
        }
        else {
            connectBtn.setText("Disconnect");
            connectBtn.setBackground(Color.green);
        }
    }
    /**
     * To be used by Triton in GroundSystemsPanel
     * @param rotatorIndex
     * @param portIndex
     */
    public void clickConnectBtn(int rotatorIndex,int portIndex)
    {
        rotatorSelect.setSelectedIndex(rotatorIndex);
        portSelect.setSelectedIndex(portIndex);
        connectBtn.doClick();
    }
    private void rotatorSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotatorSelectActionPerformed
        getSelectedRotator();
    }//GEN-LAST:event_rotatorSelectActionPerformed

    private void setDefaultBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setDefaultBtnActionPerformed
//        com = portSelect.getSelectedItem();
//        rot = rotatorSelect.getSelectedItem();

        // TODO Set those as default locations
    }//GEN-LAST:event_setDefaultBtnActionPerformed
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        portSelect = new CommPortComboBox(CommPortIdentifier.PORT_SERIAL);
        rotatorSelect = new javax.swing.JComboBox();
        connectBtn = new javax.swing.JButton();
        javax.swing.JLabel rotatorLbl = new javax.swing.JLabel();
        javax.swing.JLabel PortLbl = new javax.swing.JLabel();
        setDefaultBtn = new javax.swing.JButton();
        loadDefaultBtn = new javax.swing.JButton();

        portSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portSelectActionPerformed(evt);
            }
        });

        rotatorSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotatorSelectActionPerformed(evt);
            }
        });

        connectBtn.setBackground(java.awt.Color.red);
        connectBtn.setText("Connect");
        connectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBtnActionPerformed(evt);
            }
        });

        rotatorLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rotatorLbl.setText("Rotator");

        PortLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PortLbl.setText("COM Port");

        setDefaultBtn.setText("Set As Default");
        setDefaultBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setDefaultBtnActionPerformed(evt);
            }
        });

        loadDefaultBtn.setText("Load Default");
        loadDefaultBtn.setActionCommand("jButtonLoadDefault");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(setDefaultBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loadDefaultBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PortLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(rotatorLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rotatorSelect, 0, 95, Short.MAX_VALUE)
                            .addComponent(portSelect, 0, 95, Short.MAX_VALUE)))
                    .addComponent(connectBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rotatorSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rotatorLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PortLbl)
                    .addComponent(portSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadDefaultBtn)
                    .addComponent(setDefaultBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectBtn;
    private javax.swing.JButton loadDefaultBtn;
    private javax.swing.JComboBox portSelect;
    private javax.swing.JComboBox rotatorSelect;
    private javax.swing.JButton setDefaultBtn;
    // End of variables declaration//GEN-END:variables

}
