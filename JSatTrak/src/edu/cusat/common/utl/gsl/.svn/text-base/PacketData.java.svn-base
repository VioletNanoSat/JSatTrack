package edu.cusat.common.utl.gsl;

import java.util.Arrays;

import jsattrak.utilities.Bytes;

public class PacketData {

    public static final int PACKET_DATA_LENGTH = 300;
    public static final int GSL_HEADER_LENGTH = 7;
    private static final int GSL_DATA_LENGTH = 293;
    private static final int MSG_ID_INDEX = 0;
    private static final int PKT_ID_INDEX = 2;
    private static final int GSL_TYPE_INDEX = 4;
    private static final int TOT_PKTS_INDEX = 5;
    private byte[] packetData = new byte[PACKET_DATA_LENGTH];

    public PacketData(byte[] data) {
        if (data.length > PACKET_DATA_LENGTH)
            throw new IllegalArgumentException("Length must be " + PACKET_DATA_LENGTH);
        Arrays.fill(packetData, (byte)0);
        System.arraycopy(data, 0, packetData, 0, data.length);
    }

    public byte[] getPacketData() {
        return Bytes.arraySlice(packetData, 0, PACKET_DATA_LENGTH);
    }
    
    public byte[] getGslHeader(){
        return Bytes.arraySlice(packetData, 0, GSL_HEADER_LENGTH);
    }
    
    public short getMessageId(){
        return  Bytes.toShort(packetData, MSG_ID_INDEX, true);
    }
    
    public short getPacketId(){
        return  Bytes.toShort(packetData, PKT_ID_INDEX, true);
    }
    
    public byte getGslType(){
        return packetData[GSL_TYPE_INDEX];
    }
    
    public short getTotalPackets(){
        return  Bytes.toShort(packetData, TOT_PKTS_INDEX, true);
    }
    
    public byte[] getGslPayload(){
        return Bytes.arraySlice(packetData, GSL_HEADER_LENGTH, GSL_DATA_LENGTH);
    }
}